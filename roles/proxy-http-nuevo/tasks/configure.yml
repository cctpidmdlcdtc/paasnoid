---
- name: proxy-http  |  Create destiny
  file:
    path: "{{ item }}"
    state: directory
    mode: '0750'
  with_items:
    - /opt/proxyhttp
    - /opt/proxyhttp/conf.d
    - /opt/proxyhttp/fragments

- name: proxy-http  |  Set destiny ip on router
  set_fact:
    ip_dest: "{{ ip_VPN }}"
  when: "'router' in group_names"

- name: proxy-http  |  Set destiny ip on nas
  set_fact:
    ip_dest: "{{ ansible_host }}"
  when: "'nas' in group_names"

- name: proxy-http  |  Copy docker-compose main fragments
  template: 
    src: docker_compose/{{ item }}_block.yml.j2
    dest: /opt/proxyhttp/fragments/{{ item }}_block.yml
    owner: root
    group: root
    mode: 0600
  with_items:
    - 1_head
    - 3_middle
    - 5_end

- name: proxy-http  |  Copy docker-compose service fragments 1/2
  template: 
    src: docker_compose/2_network_block.yml.j2
    dest: /opt/proxyhttp/fragments/2_{{ service_name }}.yml
    owner: root
    group: root
    mode: 0600
  when: network_name is defined

- name: proxy-http  |  Copy docker-compose service fragments 2/2
  template: 
    src: docker_compose/4_service_block.yml.j2
    dest: /opt/proxyhttp/fragments/4_{{ service_name }}.yml
    owner: root
    group: root
    mode: 0600
  when: network_name is defined

- name: proxy-http  |  Assemble docker-compose
  assemble:
    src: /opt/proxyhttp/fragments
    dest: /opt/proxyhttp/docker-compose.yml
    owner: root
    group: root
    mode: 0600 
  notify: Tear down existing services

- name: proxy-http  |  Copy default config
  copy: 
    src: default.conf
    dest: /opt/proxyhttp/conf.d/
    owner: root
    group: root
    mode: 0600 
  notify: Tear down existing services

- name: proxy-http  |  Create virtualhosts
  template: 
    src: virtualhost.conf.j2
    dest: /opt/proxyhttp/conf.d/{{ service_name }}.conf
    owner: root
    group: root
    mode: 0400
#  vars:
#    host_header: "proxy_set_header Host $host;"
  notify: Tear down existing services
#  when: service_name is defined
  when: network_name is defined
#  when: "'router' in group_names"
# not when transmission on nas

- name: proxy-http  |  Create NAS virtualhosts
  template: 
    src: virtualhost.conf.j2
    dest: /opt/proxyhttp/conf.d/NAS.conf
    owner: root
    group: root
    mode: 0400
#  vars:
#    host_header: ""
  notify: Tear down existing services
  #when: (not network_name is defined) and (not 'router' in group_names)
  when: (not network_name is defined) and ('router' in group_names)

- name: proxy-http  |  Copy /etc/hosts with NAS services inside container
  template:
    src: hosts.j2
    dest: /opt/proxyhttp/hosts
    owner: root
    group: root
    mode: 0400
  notify: Tear down existing services
#  when: not network_name is defined
# no debe copiarse

- name: proxy-http  |  Apply configuration
  meta: flush_handlers
