---
- name: proxy-http  |  Create and start services
  docker_compose:
    project_src: /opt/proxyhttp
  
#- name: proxy-http  |  Apply iptables rules
#  include_role:
#    name: firewall
#  

- block:

  - name: proxy-http  |  Get docker network name 1/2
    community.general.docker_network_info:
      name: "proxyhttp_proxy"
    register: docker_net

  - debug: var=docker_net

  - name: proxy-http  |  Get docker network name 2/2
    set_fact:
      eth_hash: "{{ docker_net.network.Id[:12] }}"

  - debug: var=eth_hash

  - name: proxy-http  |  Copy iptables service fragments
    template: 
      src: "{{ item }}_proxyhttp.v4"
      dest: /root/iptables-fragments/{{ item }}_proxyhttp
      owner: root
      group: root
      mode: 0600
    with_items:
      - '03'
      - '06'
      - '09'

  - name: firewall  |  Assemble iptables-save
    assemble:
      src: /root/iptables-fragments
      dest: /etc/iptables/rules.v4
      owner: root
      group: root
      mode: 0600
    notify: Restart iptables

  - name: proxy-http  |  Restart iptables
    meta: flush_handlers

  when: "'router' in group_names"
